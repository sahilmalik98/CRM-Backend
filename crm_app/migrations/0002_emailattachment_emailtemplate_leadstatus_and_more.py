# Generated by Django 4.2.16 on 2024-11-12 08:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crm_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.FileField(blank=True, help_text='Attachments', null=True, upload_to='attachments')),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template Name', max_length=255)),
                ('sender_name', models.CharField(help_text='Who sent the mail', max_length=255)),
                ('subject', models.CharField(help_text='Email Subject', max_length=255)),
                ('body', models.TextField(help_text='Email Body')),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('meeting', 'Meeting Email'), ('notification', 'Notification Email'), ('reminder', 'Reminder Email'), ('template', 'Template')], default='template', help_text='Type of Email Template', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the template was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the template was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='LeadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, choices=[('New', 'New'), ('Qualified/Meeting', 'Qualified/Meeting'), ('Process', 'In Process'), ('Win', 'Win'), ('Lost', 'Lost')], help_text='Previous lead status', max_length=20, null=True)),
                ('new_status', models.CharField(choices=[('New', 'New'), ('Qualified/Meeting', 'Qualified/Meeting'), ('Process', 'In Process'), ('Win', 'Win'), ('Lost', 'Lost')], default='New', help_text='Current lead status', max_length=20)),
                ('changed_at', models.DateTimeField(auto_now=True, help_text='Date and time when the Status was last updated')),
                ('changed_by', models.CharField(blank=True, help_text='User who changed the status', max_length=255, null=True)),
                ('feedback', models.TextField(blank=True, help_text='Feedback regarding the lead status change', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingStatusChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, help_text='Previous meeting status', max_length=20, null=True)),
                ('mail_sent', models.BooleanField(default=False)),
                ('new_status', models.CharField(default='Scheduled', help_text='Current meeting status', max_length=20)),
                ('feedback', models.TextField(blank=True, help_text='Feedback regarding the meeting status change', null=True)),
                ('changed_by', models.CharField(blank=True, help_text='User who changed the status', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the record was created')),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view_leads', models.BooleanField(default=False)),
                ('can_add_leads', models.BooleanField(default=False)),
                ('can_edit_leads', models.BooleanField(default=False)),
                ('can_delete_leads', models.BooleanField(default=False)),
                ('can_view_lead_status', models.BooleanField(default=False)),
                ('can_edit_lead_status', models.BooleanField(default=False)),
                ('can_view_timeline', models.BooleanField(default=False)),
                ('can_create_meeting', models.BooleanField(default=False)),
                ('can_edit_meeting', models.BooleanField(default=False)),
                ('can_view_calendar', models.BooleanField(default=False)),
                ('can_edit_calendar', models.BooleanField(default=False)),
                ('can_send_sms', models.BooleanField(default=False)),
                ('can_view_sms', models.BooleanField(default=False)),
                ('can_view_email', models.BooleanField(default=False)),
                ('can_edit_email', models.BooleanField(default=False)),
                ('can_view_meeting', models.BooleanField(default=False)),
                ('can_view_quotation', models.BooleanField(default=False)),
                ('can_send_mail', models.BooleanField(default=False)),
                ('can_view_mail', models.BooleanField(default=False)),
                ('can_analytics', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Short bio', null=True)),
                ('birth_date', models.DateField(blank=True, help_text='Date of birth', null=True)),
                ('profile_picture', models.ImageField(blank=True, help_text='Profile picture', null=True, upload_to='profile_pictures/')),
                ('phone', models.CharField(blank=True, help_text='Phone number', max_length=15, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email address', max_length=254, null=True)),
                ('address', models.TextField(blank=True, help_text='Address details', null=True)),
                ('company_name', models.CharField(blank=True, help_text='Company name', max_length=100, null=True)),
                ('position', models.CharField(blank=True, help_text='Job position', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='QuotationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=255)),
                ('discription', models.TextField(blank=True, null=True)),
                ('site_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('letter_head', models.ImageField(blank=True, null=True, upload_to='letterheads/')),
                ('table_width', models.CharField(default='90%', max_length=50)),
                ('table_margin', models.CharField(default='200px auto', max_length=50)),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('basic_wages', models.CharField(blank=True, max_length=60, null=True)),
                ('da', models.CharField(blank=True, max_length=60, null=True)),
                ('hra', models.CharField(blank=True, max_length=60, null=True)),
                ('special_allowance', models.CharField(blank=True, max_length=60, null=True)),
                ('other_allowance', models.CharField(blank=True, max_length=60, null=True)),
                ('extra_hours', models.CharField(blank=True, max_length=60, null=True)),
                ('subtotal', models.CharField(blank=True, max_length=60, null=True)),
                ('employee_pf', models.CharField(blank=True, max_length=60, null=True)),
                ('employee_esic', models.CharField(blank=True, max_length=60, null=True)),
                ('lwf1', models.CharField(blank=True, max_length=60, null=True)),
                ('professional_tax1', models.CharField(blank=True, max_length=60, null=True)),
                ('total_deduction', models.CharField(blank=True, max_length=60, null=True)),
                ('in_hand_salary', models.CharField(blank=True, max_length=60, null=True)),
                ('employer_pf', models.CharField(blank=True, max_length=60, null=True)),
                ('employer_esic', models.CharField(blank=True, max_length=60, null=True)),
                ('lwf2', models.CharField(blank=True, max_length=60, null=True)),
                ('professional_tax2', models.CharField(blank=True, max_length=60, null=True)),
                ('bonus', models.CharField(blank=True, max_length=60, null=True)),
                ('gratuity', models.CharField(blank=True, max_length=60, null=True)),
                ('national_leave', models.CharField(blank=True, max_length=60, null=True)),
                ('paid_leave', models.CharField(blank=True, max_length=60, null=True)),
                ('maintenance_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('total_i', models.CharField(blank=True, max_length=60, null=True)),
                ('reliever_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('total_ii', models.CharField(blank=True, max_length=60, null=True)),
                ('service_charge', models.CharField(blank=True, max_length=60, null=True)),
                ('total_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('value_basic_wages', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_da', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_hra', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_special_allowance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_other_allowance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_extra_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_employee_pf', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_employee_esic', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_lwf1', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_professional_tax1', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_total_deduction', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_in_hand_salary', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_employer_pf', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_employer_esic', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_lwf2', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_professional_tax2', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_bonus', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_gratuity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_national_leave', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_paid_leave', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_maintenance_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_total_i', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_reliever_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_total_ii', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('Percentage_service_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('value_total_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(blank=True, help_text="Sender's phone number", max_length=100, null=True)),
                ('recipients', models.TextField(blank=True, help_text="Recipient's phone numbers (comma-separated)", null=True)),
                ('message', models.TextField(blank=True, help_text='SMS message content', null=True)),
                ('feedback', models.TextField(blank=True, help_text='Feedback regarding the lead status change', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the profile was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the profile was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='StatusChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, max_length=20, null=True)),
                ('new_status', models.CharField(blank=True, max_length=20, null=True)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when the status change occurred')),
                ('changed_by', models.CharField(blank=True, help_text='User who changed the status', max_length=255, null=True)),
                ('feedback', models.TextField(blank=True, help_text='Feedback regarding the lead status change', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('input_suggestion', 'Input Suggestion'), ('error_message', 'Error Message')], default='input_suggestion', max_length=50)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_color', models.CharField(blank=True, help_text="The user's preferred theme color (e.g., #FFFFFF for white).", max_length=7, null=True)),
                ('language', models.CharField(default='en', help_text='The preferred language for the user.', max_length=50)),
                ('meeting_notification', models.BooleanField(default=True, help_text='Whether the user wants to receive meeting notifications.')),
                ('self_browser_notification', models.BooleanField(default=True, help_text='Whether the user wants to receive browser notifications.')),
                ('self_sound_notification', models.BooleanField(default=True, help_text='Whether the user wants to receive sound notifications.')),
                ('welcome_mail', models.BooleanField(default=False, help_text='Whether the user has received a welcome email.')),
                ('auto_refresh_duration', models.PositiveIntegerField(default=300, help_text='The duration (in seconds) for auto-refresh, default is 300 seconds (5 minutes).')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
            },
        ),
        migrations.RemoveField(
            model_name='basicactivityinformation',
            name='status',
        ),
        migrations.RemoveField(
            model_name='emailspecificfields',
            name='activity',
        ),
        migrations.RemoveField(
            model_name='emailspecificfields',
            name='attachments',
        ),
        migrations.RemoveField(
            model_name='emailspecificfields',
            name='sent_date_time',
        ),
        migrations.RemoveField(
            model_name='emailspecificfields',
            name='subject',
        ),
        migrations.RemoveField(
            model_name='lead',
            name='status',
        ),
        migrations.RemoveField(
            model_name='lead',
            name='win',
        ),
        migrations.RemoveField(
            model_name='meeting',
            name='activity',
        ),
        migrations.AddField(
            model_name='basicactivityinformation',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the profile was created'),
        ),
        migrations.AddField(
            model_name='basicactivityinformation',
            name='feedback',
            field=models.TextField(blank=True, help_text='Feedback regarding the lead status change', null=True),
        ),
        migrations.AddField(
            model_name='basicactivityinformation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the profile was last updated'),
        ),
        migrations.AddField(
            model_name='emailspecificfields',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the profile was created'),
        ),
        migrations.AddField(
            model_name='emailspecificfields',
            name='feedback',
            field=models.TextField(blank=True, help_text='Feedback regarding the lead status change', null=True),
        ),
        migrations.AddField(
            model_name='emailspecificfields',
            name='lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_details', to='crm_app.lead'),
        ),
        migrations.AddField(
            model_name='emailspecificfields',
            name='mail_type',
            field=models.CharField(choices=[('welcome', 'Welcome Email'), ('meeting', 'Meeting Email'), ('notification', 'Notification Email'), ('reminder', 'Reminder Email'), ('template', 'Template')], default='template', help_text='Type of Email Template', max_length=50),
        ),
        migrations.AddField(
            model_name='lead',
            name='city',
            field=models.CharField(blank=True, default=None, help_text='City', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='color_label',
            field=models.CharField(blank=True, choices=[('#FF5733', 'Red'), ('#33FF6C', 'Green'), ('#337CFF', 'Blue'), ('#FF33EB', 'Pink'), ('#FFC233', 'Yellow')], default='#FFFFFF', help_text='Color label for visualization', max_length=7, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='country',
            field=models.CharField(blank=True, default='India', help_text='Country', max_length=100),
        ),
        migrations.AddField(
            model_name='lead',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the profile was created'),
        ),
        migrations.AddField(
            model_name='lead',
            name='lead_quality',
            field=models.CharField(blank=True, choices=[('hot', 'Hot'), ('warm', 'Warm'), ('cold', 'Cold'), ('junk', 'Junk')], default='warm', max_length=50),
        ),
        migrations.AddField(
            model_name='lead',
            name='notes',
            field=models.TextField(blank=True, default=None, help_text='Additional notes or comments about this lead.', null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='secondary_email',
            field=models.EmailField(blank=True, default=None, help_text='Secondary email address', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='secondary_phone',
            field=models.CharField(blank=True, default=None, help_text='Secondary Phone number', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='source',
            field=models.CharField(blank=True, choices=[('website', 'Website'), ('referral', 'Referral'), ('ads', 'Ads'), ('social', 'Social Media'), ('other', 'Other')], default='website', max_length=100),
        ),
        migrations.AddField(
            model_name='lead',
            name='state',
            field=models.CharField(blank=True, default=None, help_text='State/Province', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='street_address',
            field=models.CharField(blank=True, default=None, help_text='Street Address (e.g., 123 Main St)', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='suite_apartment_unit',
            field=models.CharField(blank=True, default=None, help_text='Suite/Apartment/Unit Number', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the profile was last updated'),
        ),
        migrations.AddField(
            model_name='lead',
            name='website',
            field=models.URLField(blank=True, default=None, help_text='The website URL of the lead.', null=True),
        ),
        migrations.AddField(
            model_name='lead',
            name='zip_postal_code',
            field=models.CharField(blank=True, default=None, help_text='ZIP/Postal Code', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='meeting',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the profile was created'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='feedback',
            field=models.TextField(blank=True, help_text='Feedback regarding the lead status change', null=True),
        ),
        migrations.AddField(
            model_name='meeting',
            name='lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_details', to='crm_app.lead'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='read_receipt',
            field=models.BooleanField(blank=True, default=False, help_text='Read Receipt if mail was sent', null=True),
        ),
        migrations.AddField(
            model_name='meeting',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Date and time when the profile was last updated'),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='activity_title',
            field=models.CharField(blank=True, help_text='Activity Title', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='activity_type',
            field=models.CharField(blank=True, choices=[('Email', 'Email'), ('Call', 'Call'), ('Meeting', 'Meeting'), ('To-Do', 'To-Do')], help_text='Activity Type', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='assigned_to',
            field=models.CharField(blank=True, help_text='Assigned To', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='description',
            field=models.TextField(blank=True, help_text='Description', null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='due_date',
            field=models.DateField(blank=True, help_text='Due Date', null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='duration',
            field=models.DurationField(blank=True, help_text='Duration', null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='end_time',
            field=models.TimeField(blank=True, help_text='End Time', null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm_app.lead'),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='priority',
            field=models.CharField(blank=True, choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], help_text='Priority', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='basicactivityinformation',
            name='start_time',
            field=models.TimeField(blank=True, help_text='Start Time', null=True),
        ),
        migrations.AlterField(
            model_name='emailspecificfields',
            name='bcc',
            field=models.TextField(blank=True, help_text='BCC', null=True),
        ),
        migrations.AlterField(
            model_name='emailspecificfields',
            name='body',
            field=models.TextField(blank=True, help_text='Body', null=True),
        ),
        migrations.AlterField(
            model_name='emailspecificfields',
            name='cc',
            field=models.TextField(blank=True, help_text='CC', null=True),
        ),
        migrations.AlterField(
            model_name='emailspecificfields',
            name='read_receipt',
            field=models.BooleanField(blank=True, default=False, help_text='Read Receipt', null=True),
        ),
        migrations.AlterField(
            model_name='emailspecificfields',
            name='recipients',
            field=models.TextField(blank=True, help_text='Recipients', null=True),
        ),
        migrations.AlterField(
            model_name='emailspecificfields',
            name='sender',
            field=models.EmailField(blank=True, help_text='Sender', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='lead',
            name='compliance',
            field=models.CharField(blank=True, choices=[('No', 'No'), ('Yes', 'Yes')], default=None, help_text='Compliance status', max_length=5, null=True),
        ),
        migrations.AlterField(
            model_name='lead',
            name='contact_name',
            field=models.CharField(blank=True, default=None, help_text='Contact Name', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='lead',
            name='email',
            field=models.EmailField(blank=True, default=None, help_text='Email address', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='lead',
            name='organization',
            field=models.CharField(blank=True, default=None, help_text='Organization name', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='lead',
            name='phone',
            field=models.CharField(blank=True, default=None, help_text='Phone number', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='lead',
            name='rating',
            field=models.IntegerField(default=1, help_text='Rating (e.g., 1, 2, 3, 4, 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='lead',
            name='requirement',
            field=models.TextField(blank=True, default=None, help_text='Requirement details', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='attendees',
            field=models.TextField(blank=True, help_text='Attendees', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='duration',
            field=models.DurationField(blank=True, help_text='Duration', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='end_time',
            field=models.TimeField(blank=True, help_text='End Time', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='meeting_date',
            field=models.DateField(blank=True, help_text='Meeting Date', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='meeting_description',
            field=models.TextField(blank=True, help_text='Meeting Description', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='meeting_title',
            field=models.CharField(blank=True, help_text='Meeting Title', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='meeting_type',
            field=models.CharField(blank=True, choices=[('conference-call', 'conference call'), ('in-person', 'in person'), ('virtual', 'virtual')], help_text='Meeting Type', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='presenters',
            field=models.TextField(blank=True, help_text='Presenter(s)', null=True),
        ),
        migrations.AlterField(
            model_name='meeting',
            name='start_time',
            field=models.TimeField(blank=True, help_text='Start Time', null=True),
        ),
        migrations.DeleteModel(
            name='Address',
        ),
        migrations.AddField(
            model_name='statuschangelog',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_changes', to='crm_app.basicactivityinformation'),
        ),
        migrations.AddField(
            model_name='sms',
            name='lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_details', to='crm_app.lead'),
        ),
        migrations.AddField(
            model_name='meetingstatuschangelog',
            name='meeting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_changes', to='crm_app.meeting'),
        ),
        migrations.AddField(
            model_name='leadstatus',
            name='lead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_changes', to='crm_app.lead'),
        ),
        migrations.AddField(
            model_name='emailattachment',
            name='email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_attachments', to='crm_app.emailtemplate'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='template',
            field=models.ForeignKey(blank=True, help_text='Email Template', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meetingemails', to='crm_app.emailtemplate'),
        ),
    ]
